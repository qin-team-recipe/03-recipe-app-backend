openapi: 3.1.0
info:
  version: '1.0'
  title: team3-backend API
  summary: 注目のシェフ一覧を返却
  description: ''
servers:
  - url: 'http://localhost:8080'
paths:
  '/api/chefs/{id}':
    get:
      summary: 有名シェフ取得
      tags: []
      operationId: get-api-chefs-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetChef'
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    put:
      summary: 有名シェフ更新
      operationId: put-api-chefs-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateChef'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              x-examples:
                Example 1:
                  name: Mシェフ
                  imageUrl: 'http://www.yahoo.co.jp'
                  profile: 平成14年事例Ⅱで出題されたMシェフ。三國清三がモデルではないか？と噂になった。
                  link:
                    - label: LABEL_1
                      url: URL_1
                    - label: LABEL_2
                      url: URL_2
              properties:
                name:
                  type: string
                  x-oapi-codegen-extra-tags:
                    binding: required
                  description: 登録名
                imageUrl:
                  type: string
                  description: プロフィール画像
                profile:
                  type: string
                  description: シェフ紹介
                link:
                  type: array
                  x-oapi-codegen-extra-tags:
                    binding: required
                  description: リンク
                  items:
                    type: object
                    properties:
                      label:
                        type: string
                      url:
                        type: string
              required:
                - name
                - link
    delete:
      summary: 有名シェフ削除
      operationId: delete-api-chefs-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletedChef'
  /api/chefs:
    post:
      summary: 有名シェフ新規登録
      operationId: post-api-chefs
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateChef'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              x-examples:
                Example 1:
                  name: シェフ1
                  imageUrl: 'http://www.yahoo.co.jp'
                  profile: PROFILE_1
                  link:
                    - label: LABEL_1
                      url: URL_1
              properties:
                name:
                  type: string
                  x-oapi-codegen-extra-tags:
                    binding: required
                  description: 登録名
                imageUrl:
                  type: string
                  description: プロフィール画像
                profile:
                  type: string
                  description: シェフ紹介
                link:
                  type: array
                  x-oapi-codegen-extra-tags:
                    binding: required
                  description: リンク
                  items:
                    type: object
                    properties:
                      label:
                        type: string
                      url:
                        type: string
              required:
                - name
                - link
      description: ''
  /api/chefs/featured:
    get:
      summary: 注目の有名シェフ一覧を取得
      operationId: get-api-chefs-featured
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeaturedChef'
      servers:
        - url: 'http://localhost:8080'
    parameters: []
  /api/user/users:
    get:
      summary: 自分を取得
      tags: []
      operationId: get-api-user-users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUsr'
    put:
      summary: 自分を更新
      operationId: put-api-user-users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateUsr'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              x-examples:
                Example 1:
                  name: NAME_1
                  imageUrl: 'http://www.yahoo.co.jp'
                  profile: PROFILE_1
                  link:
                    - label: LABEL_1
                      url: 'http://www.yahoo.co.jp'
                    - label: LABEL_2
                      url: 'http://www.yahoo.co.jp'
              properties:
                name:
                  type: string
                  x-oapi-codegen-extra-tags:
                    binding: required
                  description: ニックネーム
                imageUrl:
                  type: string
                  description: プロフィール画像（任意）
                profile:
                  type: string
                  description: 自己紹介（任意）
                link:
                  type: array
                  x-oapi-codegen-extra-tags:
                    binding: required
                  description: リンク（任意）
                  items:
                    type: object
                    properties:
                      label:
                        type: string
                      url:
                        type: string
              required:
                - name
                - link
    delete:
      summary: 自分を削除
      operationId: delete-api-user-users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletedUsr'
  '/api/users/{id}':
    get:
      summary: ユーザー取得
      tags: []
      operationId: get-api-users-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUsr'
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  '/api/recipes/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: レシピID
    get:
      summary: レシピ取得
      operationId: get-api-recipes-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRecipe'
  '/api/chefs/recipe/{recipe_id}':
    put:
      summary: 有名シェフのレシピ更新
      operationId: put-api-chefs-recipe-recipe_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateRecipe'
      x-stoplight:
        id: v8smkyhzs45kj
      requestBody:
        content:
          application/json:
            schema:
              type: object
              x-examples:
                Example 1:
                  name: オムライス
                  servings: 6
                  ingredient:
                    - name: 卵
                      supplement: 鶏卵
                    - name: トマト
                      supplement: ケチャップ
                  method:
                    - html: <p>卵を焼く</p>
                      supplement: {}
                    - html: <p>ケチャップをかける</p>
                      supplement: []
                  imageUrl: IMAGE_URL_1
                  introduction: INTRODUCTION_1
                  link:
                    - 'https://www.yahoo.co.jp'
                    - 'https://www.amazon.co.jp'
                  accessLevel: 2
              properties:
                name:
                  type: string
                  x-oapi-codegen-extra-tags:
                    binding: required
                  description: レシピ名
                servings:
                  type: integer
                  x-oapi-codegen-extra-tags:
                    binding: required
                  description: ＊人前
                ingredient:
                  type: array
                  x-oapi-codegen-extra-tags:
                    binding: required
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        description: 材料ID
                      name:
                        type: string
                        x-oapi-codegen-extra-tags:
                          binding: required
                        description: 材料名
                      supplement:
                        type: string
                        description: 補足
                    required:
                      - name
                method:
                  type: array
                  x-oapi-codegen-extra-tags:
                    binding: required
                  description: 作り方
                  items:
                    type: object
                    properties:
                      html:
                        type: string
                      supplement:
                        oneOf:
                          - type: object
                          - type: array
                            items:
                              type: object
                        x-go-type: any
                        description: 補足
                imageUrl:
                  type: string
                  description: 画像
                introduction:
                  type: string
                  description: レシピの紹介文
                link:
                  type: array
                  x-oapi-codegen-extra-tags:
                    binding: required
                  description: リンク
                  items:
                    type: string
                accessLevel:
                  type: integer
                  x-oapi-codegen-extra-tags:
                    binding: required
                  description: 公開、限定公開、非公開、下書き
              required:
                - name
                - servings
                - ingredient
                - method
                - link
                - accessLevel
    parameters:
      - schema:
          type: string
        name: recipe_id
        in: path
        required: true
    delete:
      summary: 有名シェフのレシピ削除
      operationId: delete-api-chefs-recipe-recipe_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletedRecipe'
  '/api/user/users/recipe/{recipe_id}':
    put:
      summary: 一般シェフのマイレシピ更新
      operationId: put-api-user-users-recipe-recipe_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateRecipe'
      x-stoplight:
        id: v8smkyhzs45kj
      requestBody:
        content:
          application/json:
            schema:
              type: object
              x-examples:
                Example 1:
                  name: オムライス
                  servings: 6
                  ingredient:
                    - name: 卵
                      supplement: 鶏卵
                    - name: トマト
                      supplement: ケチャップ
                  method:
                    - html: <p>卵を焼く</p>
                      supplement: {}
                    - html: <p>ケチャップをかける</p>
                      supplement: []
                  imageUrl: IMAGE_URL_1
                  introduction: INTRODUCTION_1
                  link:
                    - 'https://www.yahoo.co.jp'
                    - 'https://www.amazon.co.jp'
                  accessLevel: 2
              properties:
                name:
                  type: string
                  x-oapi-codegen-extra-tags:
                    binding: required
                  description: レシピ名
                servings:
                  type: integer
                  x-oapi-codegen-extra-tags:
                    binding: required
                  description: ＊人前
                ingredient:
                  type: array
                  x-oapi-codegen-extra-tags:
                    binding: required
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        description: 材料ID
                      name:
                        type: string
                        x-oapi-codegen-extra-tags:
                          binding: required
                        description: 材料名
                      supplement:
                        type: string
                        description: 補足
                    required:
                      - name
                method:
                  type: array
                  x-oapi-codegen-extra-tags:
                    binding: required
                  description: 作り方
                  items:
                    type: object
                    properties:
                      html:
                        type: string
                      supplement:
                        oneOf:
                          - type: object
                          - type: array
                            items:
                              type: object
                        x-go-type: any
                        description: 補足
                imageUrl:
                  type: string
                  description: 画像
                introduction:
                  type: string
                  description: レシピの紹介文
                link:
                  type: array
                  x-oapi-codegen-extra-tags:
                    binding: required
                  description: リンク
                  items:
                    type: string
                accessLevel:
                  type: integer
                  x-oapi-codegen-extra-tags:
                    binding: required
                  description: 公開、限定公開、非公開、下書き
              required:
                - name
                - servings
                - ingredient
                - method
                - link
                - accessLevel
    parameters:
      - schema:
          type: string
        name: recipe_id
        in: path
        required: true
    delete:
      summary: 一般シェフのマイレシピ削除
      operationId: delete-api-user-users-recipe-recipe_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletedRecipe'
  '/api/chefs/{chef_id}/recipe':
    post:
      summary: 有名シェフのレシピ新規登録
      operationId: post-api-chefs-chef_id-recipe
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateChefRecipe'
      servers:
        - url: 'http://localhost:8080'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              x-examples:
                Example 1:
                  chefId: f4da8c3d-64d7-4dcf-858d-f3161304531b
                  name: マカロニグラタン
                  servings: 4
                  ingredient:
                    - name: マカロニ
                      supplement: パスタ
                    - name: グラタン
                      supplement: チーズ
                  method:
                    - html: <p>煮る</p>
                      supplement: {}
                    - html: <p>焼く</p>
                      supplement: []
                  imageUrl: IMAGE_URL_1
                  introduction: INTRODUCTION_1
                  link:
                    - 'https://www.yahoo.co.jp'
                    - 'https://www.amazon.co.jp'
                  accessLevel: 2
              properties:
                name:
                  type: string
                  x-oapi-codegen-extra-tags:
                    binding: required
                  description: レシピ名
                servings:
                  type: integer
                  x-oapi-codegen-extra-tags:
                    binding: required
                  description: ＊人前
                ingredient:
                  type: array
                  x-oapi-codegen-extra-tags:
                    binding: required
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        x-oapi-codegen-extra-tags:
                          binding: required
                        description: 材料名
                      supplement:
                        type: string
                        description: 補足
                    required:
                      - name
                method:
                  type: array
                  x-oapi-codegen-extra-tags:
                    binding: required
                  description: 作り方
                  items:
                    type: object
                    properties:
                      html:
                        type: string
                      supplement:
                        oneOf:
                          - type: object
                          - type: array
                            items:
                              type: object
                        x-go-type: any
                        description: 補足
                imageUrl:
                  type: string
                  description: 画像
                introduction:
                  type: string
                  description: レシピの紹介文
                link:
                  type: array
                  x-oapi-codegen-extra-tags:
                    binding: required
                  description: リンク
                  items:
                    type: string
                accessLevel:
                  type: integer
                  x-oapi-codegen-extra-tags:
                    binding: required
                  description: 公開、限定公開、非公開、下書き
              required:
                - name
                - servings
                - ingredient
                - method
                - link
                - accessLevel
      description: ''
    parameters:
      - schema:
          type: string
        name: chef_id
        in: path
        required: true
  /api/user/users/recipe:
    post:
      summary: 一般シェフのマイレシピ新規登録
      operationId: post-api-user-users-recipe
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUsrRecipe'
      servers:
        - url: 'http://localhost:8080'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              x-examples:
                Example 1:
                  name: オムライス
                  servings: 6
                  ingredient:
                    - name: 卵
                      supplement: 鶏卵
                    - name: トマト
                      supplement: ケチャップ
                  method:
                    - html: <p>卵を焼く</p>
                      supplement: {}
                    - html: <p>ケチャップをかける</p>
                      supplement: []
                  imageUrl: IMAGE_URL_1
                  introduction: INTRODUCTION_1
                  link:
                    - 'https://www.yahoo.co.jp'
                    - 'https://www.amazon.co.jp'
                  accessLevel: 2
              properties:
                name:
                  type: string
                  x-oapi-codegen-extra-tags:
                    binding: required
                  description: レシピ名
                servings:
                  type: integer
                  x-oapi-codegen-extra-tags:
                    binding: required
                  description: ＊人前
                ingredient:
                  type: array
                  x-oapi-codegen-extra-tags:
                    binding: required
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        x-oapi-codegen-extra-tags:
                          binding: required
                        description: 材料名
                      supplement:
                        type: string
                        description: 補足
                    required:
                      - name
                method:
                  type: array
                  x-oapi-codegen-extra-tags:
                    binding: required
                  description: 作り方
                  items:
                    type: object
                    properties:
                      html:
                        type: string
                      supplement:
                        oneOf:
                          - type: object
                          - type: array
                            items:
                              type: object
                        x-go-type: any
                        description: 補足
                imageUrl:
                  type: string
                  description: 画像
                introduction:
                  type: string
                  description: レシピの紹介文
                link:
                  type: array
                  x-oapi-codegen-extra-tags:
                    binding: required
                  description: リンク
                  items:
                    type: string
                accessLevel:
                  type: integer
                  x-oapi-codegen-extra-tags:
                    binding: required
                  description: 公開、限定公開、非公開、下書き
              required:
                - name
                - servings
                - ingredient
                - method
                - link
                - accessLevel
    parameters: []
  /api/recipes/trend:
    get:
      summary: 話題のレシピ一覧を取得
      operationId: get-api-recipes-trend
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrendRecipe'
      servers:
        - url: 'http://localhost:8080'
    parameters: []
  /api/user/lists:
    get:
      summary: ユーザーの買い物リスト一覧
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetShoppingLists'
      operationId: get-api-user-lists
    post:
      summary: 買い物リスト登録
      operationId: post-api-user-lists
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateShoppingList'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              x-examples:
                Example 1:
                  recipeId: 41eb8f23-7b27-4094-b2fc-b3e576e36b54
                  description: 2人前
                  isFairCopy: true
                  item:
                    - ingredientId: d511d238-bbb9-4eb0-ba0e-811e3ec7b591
                      name: 卵
                      supplement: 鶏卵
                    - ingredientId: d0a35ca6-6478-4339-aa8f-76a6628ee796
                      name: トマト
                      supplement: ケチャップ
                    - ingredientId: 0b9dba90-2f45-484b-a6c3-9ffc66a21b35
                      name: マカロニ
                      supplement: パスタ
              properties:
                recipeId:
                  type: string
                  description: レシピID（メモリストのときはnull）
                description:
                  type: string
                  description: 「*人前」「メモリスト」
                isFairCopy:
                  type: boolean
                  x-oapi-codegen-extra-tags:
                    binding: required
                  description: true：清書、false：下書き
                item:
                  type: array
                  x-oapi-codegen-extra-tags:
                    binding: required
                  description: 買い物明細
                  items:
                    type: object
                    properties:
                      ingredientId:
                        type: string
                        description: 材料ID（メモリストのときはnull）
                      name:
                        type: string
                        x-oapi-codegen-extra-tags:
                          binding: required
                        description: 材料名
                      supplement:
                        type: string
                        description: 補足
                    required:
                      - name
              required:
                - isFairCopy
                - item
  '/api/user/lists/recipe/{recipe_id}':
    get:
      summary: 買い物リスト取得
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetShoppingList'
      operationId: get-api-user-lists-recipe-recipe_id
    parameters:
      - schema:
          type: string
        name: recipe_id
        in: path
        required: true
  '/api/user/lists/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    delete:
      summary: 買い物リスト削除
      operationId: delete-api-user-lists-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletedShoppingList'
    put:
      summary: 買い物リスト更新
      operationId: put-api-user-lists-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateShoppingList'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              x-examples:
                Example 1:
                  usr_id: 37823a93-2569-4f6b-832f-5dfe47f39200
                  recipeId: 41eb8f23-7b27-4094-b2fc-b3e576e36b54
                  rIdx: 2
                  description: 4人前
                  isFairCopy: false
                  item:
                    - id: 98edbf48-112a-437b-8c3c-37a7c10a5162
                      name: 卵
                      supplement: 鶏卵
                    - id: 944fce73-06d5-4087-a1c5-40fd82a9e62b
                      name: トマト
                      supplement: ケチャップ
                    - ingredientId: f986c6b0-6b03-427a-aa6a-890f0bb4a97b
                      name: グラタン
                      supplement: チーズ
              properties:
                recipeId:
                  type: string
                  description: レシピID（メモリストのときはnull）
                rIdx:
                  type: integer
                  x-oapi-codegen-extra-tags:
                    binding: required
                  description: リバースインデックス
                description:
                  type: string
                  description: 「*人前」「メモリスト」
                isFairCopy:
                  type: boolean
                  x-oapi-codegen-extra-tags:
                    binding: required
                  description: true：清書、false：下書き
                item:
                  type: array
                  x-oapi-codegen-extra-tags:
                    binding: required
                  description: 買い物明細
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        description: 買い物明細ID（新規登録のときはnull）
                      name:
                        type: string
                        x-oapi-codegen-extra-tags:
                          binding: required
                        description: 材料名
                      supplement:
                        type: string
                        description: 補足
                      ingredientId:
                        type: string
                        description: 材料ID（メモリストのときはnull）
                    required:
                      - name
              required:
                - rIdx
                - isFairCopy
                - item
  /api/chefs/search:
    get:
      summary: 有名シェフを全文検索
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchChef'
      operationId: get-api-chefs-search
      parameters:
        - schema:
            type: string
          in: query
          name: q
          description: 全文検索テキスト
          required: true
  /api/chefs/recipe/search:
    get:
      summary: 名シェフのレシピを全文検索
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchChefRecipe'
      operationId: get-api-chefs-recipe-search
      parameters:
        - schema:
            type: string
          in: query
          name: q
          description: 全文検索テキスト
  '/api/user/follow/chefs/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: 有名シェフをフォローしているか
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExistsFollowChef'
      operationId: get-api-user-follow-chefs-id
    post:
      summary: 有名シェフをフォローする
      operationId: post-api-user-follow-chefs-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateFollowChef'
    delete:
      summary: 有名シェフのフォローを解除する
      operationId: delete-api-user-follow-chefs-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletedFollowChef'
  /api/user/follow/chefs:
    get:
      summary: フォローしている有名シェフの一覧を取得する
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFollowChef'
      operationId: get-api-user-follow-chefs
  /api/user/follow/chefs/recipes:
    get:
      summary: フォローしているシェフの新着レシピ一覧を取得する
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFollowChefRecipe'
      operationId: get-api-user-follow-chefs-recipes
  '/api/user/follow/users/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: 一般シェフをフォローしているか
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExistsFollowUser'
      operationId: get-api-user-follow-users-id
    post:
      summary: 一般シェフをフォローする
      operationId: post-api-user-follow-users-id
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFollowUser'
    delete:
      summary: 一般シェフのフォローを解除する
      operationId: delete-api-user-follow-users-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletedFollowUser'
  /api/user/follow/users:
    get:
      summary: フォローしている一般シェフの一覧を取得する
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFollowUser'
      operationId: get-api-user-follow-users
  '/api/chefs/{id}/recipes':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: 有名シェフのレシピ一覧を取得
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRecipe'
      operationId: get-api-chefs-id-recipes
  /recipes:
    get:
      summary: レシピ一覧を取得
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRecipe'
      operationId: get-recipes
components:
  schemas:
    CreateChef:
      type: object
      x-examples:
        Example 1:
          id: d309c90c-e318-410e-b342-bed6bc2dc96f
          name: シェフ1
          imageUrl: 'http://www.yahoo.co.jp'
          profile: PROFILE_1
          link:
            - label: LABEL_1
              url: URL_1
          createdAt: '2023-08-09T05:46:08.569996+09:00'
          updatedAt: '2023-08-09T05:46:08.569996+09:00'
          numRecipe: 0
          numFollower: 0
      properties:
        id:
          type: string
        name:
          type: string
          description: 登録名
        imageUrl:
          type: string
          description: プロフィール画像
        profile:
          type: string
          description: シェフ紹介
        link:
          type: array
          description: リンク
          items:
            type: object
            properties:
              label:
                type: string
              url:
                type: string
        createdAt:
          type: string
        updatedAt:
          type: string
        numRecipe:
          type: integer
          description: レシピ数
        numFollower:
          type: integer
          description: フォロワー数
      required:
        - id
        - name
        - link
        - createdAt
        - updatedAt
        - numRecipe
        - numFollower
    CreateChefRecipe:
      type: object
      x-examples:
        Example 1:
          id: fcd040c9-8ea9-4833-a42d-95e57c47a745
          chefId: f4da8c3d-64d7-4dcf-858d-f3161304531b
          usrId: null
          name: 名前を変えてみる
          servings: 4
          ingredient:
            - id: 157e8f3d-033f-47b4-b74c-332d2caf2437
              name: 修正1
              supplement: 修正補足1
            - id: 8b830fd4-d3f8-48ea-8956-dd4f28e40984
              name: 追加2
              supplement: 追加補足2
          method:
            - html: <p>作り方1</p>
              supplement: {}
            - html: <p>作り方2</p>
              supplement: []
          imageUrl: IMAGE_URL_1
          introduction: INTRODUCTION_1
          link:
            - 'https://www.yahoo.co.jp'
            - 'https://www.amazon.co.jp'
          accessLevel: 2
          createdAt: '2023-08-06T06:14:53.749359+09:00'
          updatedAt: '2023-08-06T17:22:06.900841+09:00'
          numFav: 0
      title: createChefRecipe
      properties:
        id:
          type: string
          format: uuid
          description: レシピID
        chefId:
          type: string
          format: uuid
          description: シェフID
        usrId:
          type: string
          format: uuid
          description: ユーザーID
        name:
          type: string
          description: レシピ名
        servings:
          type: integer
          description: ＊人前
        ingredient:
          type: array
          description: 材料
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              name:
                type: string
                description: 材料名
              supplement:
                type: string
                description: 補足
            required:
              - id
              - name
        method:
          type: array
          description: 作り方
          items:
            type: object
            properties:
              html:
                type: string
              supplement:
                oneOf:
                  - type: object
                  - type: array
                    items:
                      type: object
        imageUrl:
          type: string
          description: 画像
        introduction:
          type: string
          description: レシピの紹介文
        link:
          type: array
          description: リンク
          items:
            type: string
        accessLevel:
          type: integer
          description: 公開、限定公開、非公開、下書き
        createdAt:
          type: string
        updatedAt:
          type: string
        numFav:
          type: integer
          description: いいね数
      required:
        - id
        - chefId
        - name
        - servings
        - ingredient
        - method
        - accessLevel
        - createdAt
        - updatedAt
        - numFav
    CreateFollowChef:
      type: object
      x-examples:
        Example 1:
          id: b30f569b-3aae-43f6-8213-e1d8366883bb
          chefId: 9a0ce94b-d275-4ea6-ae11-914612c79d62
          usrId: d3d7b0d2-679e-4ca3-adbb-a5ce674560e0
          createdAt: '2023-08-16T07:23:15.291575+09:00'
      properties:
        id:
          type: string
        chefId:
          type: string
          description: シェフID
        usrId:
          type: string
          description: ユーザーID
        createdAt:
          type: string
      required:
        - id
        - chefId
        - usrId
        - createdAt
    CreateFollowUser:
      type: object
      x-examples:
        Example 1:
          id: 840f467b-7991-4aa4-86e9-499745d9a89c
          followeeId: 8642eb31-7801-4284-b69b-225aee3b1826
          followerId: d3d7b0d2-679e-4ca3-adbb-a5ce674560e0
          createdAt: '2023-08-16T19:55:01.517424+09:00'
      properties:
        id:
          type: string
        followeeId:
          type: string
          description: フォロイーID
        followerId:
          type: string
          description: フォロワーID
        createdAt:
          type: string
      required:
        - id
        - followeeId
        - followerId
        - createdAt
    CreateShoppingList:
      type: object
      x-examples:
        Example 1:
          id: bff38254-4632-4c83-b4e0-09ac3de89c2a
          usrId: 37823a93-2569-4f6b-832f-5dfe47f39200
          recipeId: 41eb8f23-7b27-4094-b2fc-b3e576e36b54
          rIdx: 1
          description: 2人前
          isFairCopy: true
          createdAt: '2023-08-12T15:35:25.866045+09:00'
          updatedAt: '2023-08-12T15:35:25.866045+09:00'
          item:
            - id: 98edbf48-112a-437b-8c3c-37a7c10a5162
              ingredientId: d511d238-bbb9-4eb0-ba0e-811e3ec7b591
              name: 卵
              supplement: 鶏卵
            - id: 944fce73-06d5-4087-a1c5-40fd82a9e62b
              ingredientId: d0a35ca6-6478-4339-aa8f-76a6628ee796
              name: トマト
              supplement: ケチャップ
            - id: 8a1acf5d-18b4-4ed7-94de-74d3cc0de2e0
              ingredientId: 0b9dba90-2f45-484b-a6c3-9ffc66a21b35
              name: マカロニ
              supplement: パスタ
      properties:
        id:
          type: string
          format: uuid
          description: 買い物リストID
        usrId:
          type: string
          format: uuid
          description: ユーザーID
        recipeId:
          type: string
          format: uuid
          description: レシピID
        rIdx:
          type: integer
          description: リバースインデックス
        description:
          type: string
          description: 「*人前」「メモリスト」
        isFairCopy:
          type: boolean
          description: true：清書、false：下書き
        createdAt:
          type: string
        updatedAt:
          type: string
        item:
          type: array
          description: 買い物明細
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
                description: 買い物明細ID
              ingredientId:
                type: string
                format: uuid
                description: 材料ID
              name:
                type: string
                description: 材料名
              supplement:
                type: string
                description: 補足
            required:
              - id
              - name
      required:
        - id
        - usrId
        - rIdx
        - isFairCopy
        - createdAt
        - updatedAt
        - item
    CreateUsrRecipe:
      type: object
      x-examples:
        Example 1:
          id: 41eb8f23-7b27-4094-b2fc-b3e576e36b54
          chefId: null
          usrId: 2c92aad1-a117-451b-88d1-70935c360fdf
          name: オムライス
          servings: 6
          ingredient:
            - id: d511d238-bbb9-4eb0-ba0e-811e3ec7b591
              name: 卵
              supplement: 鶏卵
            - id: d0a35ca6-6478-4339-aa8f-76a6628ee796
              name: トマト
              supplement: ケチャップ
          method:
            - html: <p>卵を焼く</p>
              supplement: {}
            - html: <p>ケチャップをかける</p>
              supplement: []
          imageUrl: IMAGE_URL_1
          introduction: INTRODUCTION_1
          link:
            - 'https://www.yahoo.co.jp'
            - 'https://www.amazon.co.jp'
          accessLevel: 2
          createdAt: '2023-08-06T17:23:10.558309+09:00'
          updatedAt: '2023-08-06T17:23:10.558309+09:00'
          numFav: 0
      title: createUsrRecipe
      properties:
        id:
          type: string
          format: uuid
          description: レシピID
        chefId:
          type: string
          format: uuid
          description: シェフID
        usrId:
          type: string
          format: uuid
          description: ユーザーID
        name:
          type: string
          description: レシピ名
        servings:
          type: integer
          description: ＊人前
        ingredient:
          type: array
          description: 材料
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              name:
                type: string
                description: 材料名
              supplement:
                type: string
                description: 補足
            required:
              - id
              - name
        method:
          type: array
          description: 作り方
          items:
            type: object
            properties:
              html:
                type: string
              supplement:
                oneOf:
                  - type: object
                  - type: array
                    items:
                      type: object
        imageUrl:
          type: string
          description: 画像
        introduction:
          type: string
          description: レシピの紹介文
        link:
          type: array
          description: リンク
          items:
            type: string
        accessLevel:
          type: integer
          description: 公開、限定公開、非公開、下書き
        createdAt:
          type: string
        updatedAt:
          type: string
        numFav:
          type: integer
          description: いいね数
      required:
        - id
        - usrId
        - name
        - servings
        - ingredient
        - method
        - accessLevel
        - createdAt
        - updatedAt
        - numFav
    DeletedChef:
      type: object
      x-stoplight:
        id: 0sabxjvap6cxx
      x-examples:
        Example 1:
          id: f4da8c3d-64d7-4dcf-858d-f3161304531b
          name: NAME_1
          imageUrl: 'http://www.yahoo.co.jp'
          profile: PROFILE_1
          link:
            - label: LABEL_1
              url: null
          createdAt: '2023-07-30T16:04:30.100876+09:00'
          updatedAt: '2023-08-06T17:16:30.121799+09:00'
          numRecipe: 7
          numFollower: 0
      title: deletedChef
      properties:
        id:
          type: string
        name:
          type: string
          description: 登録名
        imageUrl:
          type: string
          description: プロフィール画像
        profile:
          type: string
          description: シェフ紹介
        createdAt:
          type: string
        updatedAt:
          type: string
        numRecipe:
          type: integer
          description: レシピ数
        numFollower:
          type: integer
          description: フォロワー数
      required:
        - id
        - name
        - createdAt
        - updatedAt
        - numRecipe
        - numFollower
    DeletedFollowChef:
      type: object
      x-examples:
        Example 1:
          id: 421ea818-c27f-40af-83ab-8ce3a1bfed71
          chefId: 9a0ce94b-d275-4ea6-ae11-914612c79d62
          usrId: d3d7b0d2-679e-4ca3-adbb-a5ce674560e0
          createdAt: '2023-08-15T19:35:41.456019+09:00'
      properties:
        id:
          type: string
        chefId:
          type: string
          description: シェフID
        usrId:
          type: string
          description: ユーザーID
        createdAt:
          type: string
      required:
        - id
        - chefId
        - usrId
        - createdAt
    DeletedFollowUser:
      type: object
      x-examples:
        Example 1:
          id: 840f467b-7991-4aa4-86e9-499745d9a89c
          followeeId: 8642eb31-7801-4284-b69b-225aee3b1826
          followerId: d3d7b0d2-679e-4ca3-adbb-a5ce674560e0
          createdAt: '2023-08-16T19:55:01.517424+09:00'
      properties:
        id:
          type: string
        followeeId:
          type: string
          description: フォロイーID
        followerId:
          type: string
          description: フォロワーID
        createdAt:
          type: string
      required:
        - id
        - followeeId
        - followerId
        - createdAt
    DeletedRecipe:
      type: object
      x-stoplight:
        id: 7ylw045makklq
      x-examples:
        Example 1:
          id: fcd040c9-8ea9-4833-a42d-95e57c47a745
          chefId: f4da8c3d-64d7-4dcf-858d-f3161304531b
          usrId: null
          name: 名前1
          servings: 4
          ingredient:
            - id: 157e8f3d-033f-47b4-b74c-332d2caf2437
              name: キャベツ
              supplement: 補足1
            - id: 66605cad-fa1e-4405-97a5-e669018ead6e
              name: トマト
              supplement: 補足2
          method:
            - html: <p>作り方1</p>
              supplement: {}
            - html: <p>作り方2</p>
              supplement: []
          imageUrl: IMAGE_URL_1
          introduction: INTRODUCTION_1
          link:
            - 'https://www.yahoo.co.jp'
            - 'https://www.amazon.co.jp'
          accessLevel: 2
          createdAt: '2023-08-06T06:14:53.749359+09:00'
          updatedAt: '2023-08-06T12:45:56.980533+09:00'
          numFav: 0
      title: deletedRecipe
      properties:
        id:
          type: string
          format: uuid
          description: レシピID
        chefId:
          type: string
          format: uuid
          description: シェフID
        usrId:
          type: string
          format: uuid
          description: ユーザーID
        name:
          type: string
          description: レシピ名
        servings:
          type: integer
          description: ＊人前
        imageUrl:
          type: string
          description: 画像
        introduction:
          type: string
          description: レシピの紹介文
        link:
          type: array
          description: リンク
          items:
            type: string
        accessLevel:
          type: integer
          description: 公開、限定公開、非公開、下書き
        createdAt:
          type: string
        updatedAt:
          type: string
        numFav:
          type: integer
          description: いいね数
      required:
        - id
        - name
        - servings
        - accessLevel
        - createdAt
        - updatedAt
        - numFav
    DeletedShoppingList:
      type: object
      x-stoplight:
        id: 39e2824a562ca
      x-examples:
        Example 1:
          id: bff38254-4632-4c83-b4e0-09ac3de89c2a
          usrId: 37823a93-2569-4f6b-832f-5dfe47f39200
          recipeId: 41eb8f23-7b27-4094-b2fc-b3e576e36b54
          rIdx: 2
          description: 4人前
          isFairCopy: false
          createdAt: '2023-08-12T15:35:25.866045+09:00'
          updatedAt: '2023-08-12T15:36:42.235739+09:00'
      properties:
        id:
          type: string
          format: uuid
          description: 買い物リストID
        usrId:
          type: string
          format: uuid
          description: ユーザーID
        recipeId:
          type: string
          format: uuid
          description: レシピID
        rIdx:
          type: integer
          description: リバースインデックス
        description:
          type: string
          description: 「*人前」「メモリスト」
        isFairCopy:
          type: boolean
          description: true：清書、false：下書き
        createdAt:
          type: string
        updatedAt:
          type: string
      required:
        - id
        - usrId
        - rIdx
        - isFairCopy
        - createdAt
        - updatedAt
      title: ''
    DeletedUsr:
      type: object
      x-stoplight:
        id: su3z8zcw3jki8
      x-examples:
        Example 1:
          id: 1c6fc87e-430b-4e71-af55-103fe3a16bee
          email: kaneda@gmail.com
          name: NAME_1
          imageUrl: 'http://www.yahoo.co.jp'
          profile: PROFILE_1
          link:
            - label: LABEL_1
              url: 'http://www.yahoo.co.jp'
            - label: LABEL_2
              url: 'http://www.yahoo.co.jp'
          createdAt: '2023-08-08T18:48:40.89562+09:00'
          updatedAt: '2023-08-08T19:56:55.402664+09:00'
          numRecipe: 0
      title: deletedUsr
      properties:
        id:
          type: string
        email:
          type: string
          description: ログインemail
        name:
          type: string
          description: ニックネーム
        imageUrl:
          type: string
          description: プロフィール画像（任意）
        profile:
          type: string
          description: 自己紹介（任意）
        createdAt:
          type: string
        updatedAt:
          type: string
        numRecipe:
          type: integer
          description: マイレシピ数
      required:
        - id
        - email
        - name
        - createdAt
        - updatedAt
        - numRecipe
    ExistsFollowChef:
      type: object
      x-examples:
        Example 1:
          exists: true
      properties:
        exists:
          type: boolean
      required:
        - exists
    ExistsFollowUser:
      type: object
      x-examples:
        Example 1:
          exists: true
      properties:
        exists:
          type: boolean
      required:
        - exists
    FeaturedChef:
      type: object
      x-stoplight:
        id: kqy0v29ewm515
      x-examples:
        Example 1:
          data:
            - chefId: 6083beb0-5543-4a2d-9101-6ce5b7b2d124
              name: 岩井 優二
              imageUrl: 'https://source.unsplash.com/random/300x300?v=1'
              numFollower: 805
              score: 81
            - chefId: 4d35e05f-3f72-4e3f-b80f-1e054ee8a7ff
              name: 大川 優希
              imageUrl: 'https://source.unsplash.com/random/300x300?v=1'
              numFollower: 631
              score: 63
            - chefId: 5dfebb01-8386-4adb-b76f-fb0c8830155f
              name: 吉川 正悟
              imageUrl: 'https://source.unsplash.com/random/300x300?v=1'
              numFollower: 219
              score: 59
            - chefId: e853f33b-be2e-44f0-b904-87dd518cb090
              name: 吉川 理貴
              imageUrl: 'https://source.unsplash.com/random/300x300?v=1'
              numFollower: 618
              score: 36
            - chefId: 45552e82-94c0-455d-b220-c65677c4fe9d
              name: 豊田 登志雄
              imageUrl: 'https://source.unsplash.com/random/300x300?v=1'
              numFollower: 194
              score: 65
            - chefId: 66a07493-0c05-44dd-8370-eb33c28f4723
              name: 星 暁
              imageUrl: 'https://source.unsplash.com/random/300x300?v=1'
              numFollower: 0
              score: 90
            - chefId: 430cb7b4-14c2-460e-9854-8869efa0f3ee
              name: 熊谷 雄哉
              imageUrl: 'https://source.unsplash.com/random/300x300?v=1'
              numFollower: 997
              score: 90
            - chefId: 0d6a0431-c4e5-42e3-be82-cbfaebcbbfe4
              name: 森岡 純奈
              imageUrl: 'https://source.unsplash.com/random/300x300?v=1'
              numFollower: 501
              score: 13
            - chefId: a37d4629-bcac-416b-9bad-23f509965898
              name: 荻野 紗芸
              imageUrl: 'https://source.unsplash.com/random/300x300?v=1'
              numFollower: 497
              score: 62
            - chefId: 18980f30-53a3-47fa-9284-244aec726513
              name: 長沢 祥太郎
              imageUrl: 'https://source.unsplash.com/random/300x300?v=1'
              numFollower: 458
              score: 2
      title: featuredChef
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              chefId:
                type: string
                format: uuid
                description: シェフID
              name:
                type: string
                description: シェフ登録名
              imageUrl:
                type: string
                description: プロフィール画像
              numFollower:
                type: integer
                description: フォロワー数
              score:
                type: integer
                description: 注目度→実際のデータはscoreの降順でソートされる
            required:
              - chefId
              - name
              - numFollower
              - score
      required:
        - data
      x-internal: false
      x-tags:
        - chef
    GetChef:
      type: object
      x-examples:
        Example 1:
          id: f4da8c3d-64d7-4dcf-858d-f3161304531b
          name: NAME_1
          imageUrl: 'http://www.yahoo.co.jp'
          profile: PROFILE_1
          link:
            - label: LABEL_1
              url: null
          createdAt: '2023-07-30T16:04:30.100876+09:00'
          updatedAt: '2023-08-06T17:16:30.121799+09:00'
          numRecipe: 7
          numFollower: 0
      properties:
        id:
          type: string
        name:
          type: string
          description: 登録名
        imageUrl:
          type: string
          description: プロフィール画像
        profile:
          type: string
          description: シェフ紹介
        link:
          type: array
          description: リンク
          items:
            type: object
            properties:
              label:
                type: string
              url:
                type: string
        createdAt:
          type: string
        updatedAt:
          type: string
        numRecipe:
          type: integer
          description: レシピ数
        numFollower:
          type: integer
          description: フォロワー数
      required:
        - id
        - name
        - link
        - createdAt
        - updatedAt
        - numRecipe
        - numFollower
    GetRecipe:
      type: object
      x-examples:
        Example 1:
          id: fcd040c9-8ea9-4833-a42d-95e57c47a745
          chefId: f4da8c3d-64d7-4dcf-858d-f3161304531b
          usrId: null
          name: 名前1
          servings: 4
          ingredient:
            - id: 157e8f3d-033f-47b4-b74c-332d2caf2437
              name: キャベツ
              supplement: 補足1
            - id: 66605cad-fa1e-4405-97a5-e669018ead6e
              name: トマト
              supplement: 補足2
          method:
            - html: <p>作り方1</p>
              supplement: {}
            - html: <p>作り方2</p>
              supplement: []
          imageUrl: IMAGE_URL_1
          introduction: INTRODUCTION_1
          link:
            - 'https://www.yahoo.co.jp'
            - 'https://www.amazon.co.jp'
          accessLevel: 2
          createdAt: '2023-08-06T06:14:53.749359+09:00'
          updatedAt: '2023-08-06T12:45:56.980533+09:00'
          numFav: 0
      title: getRecipe
      properties:
        id:
          type: string
          format: uuid
          description: レシピID
        chefId:
          type: string
          format: uuid
          description: シェフID
        usrId:
          type: string
          format: uuid
          description: ユーザーID
        name:
          type: string
          description: レシピ名
        servings:
          type: integer
          description: ＊人前
        ingredient:
          type: array
          description: 材料
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              name:
                type: string
                description: 材料名
              supplement:
                type: string
                description: 補足
            required:
              - id
              - name
        method:
          type: array
          description: 作り方
          items:
            type: object
            properties:
              html:
                type: string
              supplement:
                oneOf:
                  - type: object
                  - type: array
                    items:
                      type: object
        imageUrl:
          type: string
          description: 画像
        introduction:
          type: string
          description: レシピの紹介文
        link:
          type: array
          description: リンク
          items:
            type: string
        accessLevel:
          type: integer
          description: 公開、限定公開、非公開、下書き
        createdAt:
          type: string
        updatedAt:
          type: string
        numFav:
          type: integer
          description: いいね数
      required:
        - id
        - name
        - servings
        - ingredient
        - method
        - accessLevel
        - createdAt
        - updatedAt
        - numFav
    GetShoppingList:
      type: object
      x-examples:
        Example 1:
          id: bff38254-4632-4c83-b4e0-09ac3de89c2a
          usrId: 37823a93-2569-4f6b-832f-5dfe47f39200
          recipeId: 41eb8f23-7b27-4094-b2fc-b3e576e36b54
          rIdx: 2
          recipeName: オムライス
          chefName: null
          generalChefName: NAME_1
          description: 4人前
          isFairCopy: false
          createdAt: '2023-08-12T15:35:25.866045+09:00'
          updatedAt: '2023-08-12T15:36:42.235739+09:00'
          item:
            - id: 98edbf48-112a-437b-8c3c-37a7c10a5162
              ingredientId: d511d238-bbb9-4eb0-ba0e-811e3ec7b591
              name: 卵
              supplement: 鶏卵
            - id: 944fce73-06d5-4087-a1c5-40fd82a9e62b
              ingredientId: d0a35ca6-6478-4339-aa8f-76a6628ee796
              name: トマト
              supplement: ケチャップ
            - id: a0181a86-c9dc-48ca-8127-71c64ff5d186
              ingredientId: f986c6b0-6b03-427a-aa6a-890f0bb4a97b
              name: グラタン
              supplement: チーズ
      properties:
        id:
          type: string
          format: uuid
          description: 買い物リストID
        usrId:
          type: string
          format: uuid
          description: ユーザーID
        recipeId:
          type: string
          format: uuid
        rIdx:
          type: integer
          description: リバースインデックス
        recipeName:
          type: string
          description: レシピ名
        chefName:
          type: string
          description: 有名シェフ名
        generalChefName:
          type: string
          description: 一般シェフ名
        description:
          type: string
          description: 「*人前」「メモリスト」
        isFairCopy:
          type: boolean
          description: true：清書、false：下書き
        createdAt:
          type: string
        updatedAt:
          type: string
        item:
          type: array
          description: 買い物明細
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
                description: 買い物明細ID
              ingredientId:
                type: string
                format: uuid
                description: 材料ID
              name:
                type: string
                description: 材料名
              supplement:
                type: string
                description: 補足
            required:
              - id
              - name
      required:
        - id
        - usrId
        - rIdx
        - recipeName
        - isFairCopy
        - createdAt
        - updatedAt
        - item
    GetShoppingLists:
      type: object
      x-examples:
        Example 1:
          data:
            - id: bff38254-4632-4c83-b4e0-09ac3de89c2a
              usrId: 37823a93-2569-4f6b-832f-5dfe47f39200
              recipeId: 41eb8f23-7b27-4094-b2fc-b3e576e36b54
              rIdx: 2
              recipeName: オムライス
              chefName: null
              generalChefName: NAME_1
              description: 4人前
              isFairCopy: false
              createdAt: '2023-08-12T15:35:25.866045+09:00'
              updatedAt: '2023-08-12T15:36:42.235739+09:00'
              item:
                - id: 98edbf48-112a-437b-8c3c-37a7c10a5162
                  ingredientId: d511d238-bbb9-4eb0-ba0e-811e3ec7b591
                  name: 卵
                  supplement: 鶏卵
                - id: 944fce73-06d5-4087-a1c5-40fd82a9e62b
                  ingredientId: d0a35ca6-6478-4339-aa8f-76a6628ee796
                  name: トマト
                  supplement: ケチャップ
                - id: a0181a86-c9dc-48ca-8127-71c64ff5d186
                  ingredientId: f986c6b0-6b03-427a-aa6a-890f0bb4a97b
                  name: グラタン
                  supplement: チーズ
            - id: 2901c3ed-c4ca-4053-938b-cbfa48e560e0
              usrId: 37823a93-2569-4f6b-832f-5dfe47f39200
              recipeId: null
              rIdx: 2
              recipeName: (メモリスト)
              chefName: (メモリスト)
              generalChefName: (メモリスト)
              description: メモリスト
              isFairCopy: false
              createdAt: '2023-08-12T15:49:44.722821+09:00'
              updatedAt: '2023-08-12T15:56:19.801672+09:00'
              item:
                - id: e44c5e0b-a963-451c-8059-30fe27fbd535
                  ingredientId: null
                  name: 卵
                  supplement: 鶏卵
                - id: 5f6d82a0-b826-4c9d-a3a5-8b4efb4468bb
                  ingredientId: null
                  name: トマト
                  supplement: ケチャップ
                - id: 0da719eb-9923-4eae-be8b-e0356f31de6b
                  ingredientId: null
                  name: グラタン
                  supplement: チーズ
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: 買い物リストID
                format: uuid
              usrId:
                type: string
                description: ユーザーID
                format: uuid
              recipeId:
                type: string
                description: レシピID
                format: uuid
              rIdx:
                type: integer
                description: リバースインデックス
              recipeName:
                type: string
                description: レシピ名
              chefName:
                type: string
                description: 有名シェフ名
              generalChefName:
                type: string
                description: 一般シェフ名
              description:
                type: string
                description: 「*人前」「メモリスト」
              isFairCopy:
                type: boolean
                description: true：清書、false：下書き
              createdAt:
                type: string
              updatedAt:
                type: string
              item:
                type: array
                description: 買い物明細
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: 買い物明細ID
                      format: uuid
                    ingredientId:
                      type: string
                      description: 材料ID
                      format: uuid
                    name:
                      type: string
                      description: 材料名
                    supplement:
                      type: string
                      description: 補足
                  required:
                    - id
                    - name
            required:
              - id
              - usrId
              - rIdx
              - recipeName
              - isFairCopy
              - createdAt
              - updatedAt
              - item
      required:
        - data
    GetUsr:
      type: object
      x-examples:
        Example 1:
          id: 1c6fc87e-430b-4e71-af55-103fe3a16bee
          email: kaneda@gmail.com
          name: NAME_1
          imageUrl: 'http://www.yahoo.co.jp'
          profile: PROFILE_1
          link:
            - label: LABEL_1
              url: 'http://www.yahoo.co.jp'
            - label: LABEL_2
              url: 'http://www.yahoo.co.jp'
          createdAt: '2023-08-08T18:48:40.89562+09:00'
          updatedAt: '2023-08-08T19:56:55.402664+09:00'
          numRecipe: 0
      title: getUsr
      properties:
        id:
          type: string
        email:
          type: string
          description: ログインemail
        name:
          type: string
          description: ニックネーム
        imageUrl:
          type: string
          description: プロフィール画像（任意）
        profile:
          type: string
          description: 自己紹介（任意）
        link:
          type: array
          description: リンク（任意）
          items:
            type: object
            properties:
              label:
                type: string
              url:
                type: string
        createdAt:
          type: string
        updatedAt:
          type: string
        numRecipe:
          type: integer
          description: マイレシピ数
      required:
        - id
        - email
        - name
        - link
        - createdAt
        - updatedAt
        - numRecipe
    ListFollowChef:
      type: object
      x-examples:
        Example 1:
          data:
            - id: 9a0ce94b-d275-4ea6-ae11-914612c79d62
              name: Mシェフ
              imageUrl: 'http://www.yahoo.co.jp'
              profile: 平成14年事例Ⅱで出題されたMシェフ。三國清三がモデルではないか？と噂になった。
              createdAt: '2023-08-13T12:25:46.050604+09:00'
              updatedAt: '2023-08-16T07:23:15.291575+09:00'
              numRecipe: 1
              numFollower: 1
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: シェフID
              name:
                type: string
                description: 登録名
              imageUrl:
                type: string
                description: プロフィール画像
              profile:
                type: string
                description: シェフ紹介
              createdAt:
                type: string
              updatedAt:
                type: string
              numRecipe:
                type: integer
                description: レシピ数
              numFollower:
                type: integer
                description: フォロワー数
            required:
              - id
              - name
              - createdAt
              - updatedAt
              - numRecipe
              - numFollower
      required:
        - data
    ListFollowChefRecipe:
      type: object
      x-examples:
        Example 1:
          data:
            - id: c8235d40-6daf-424e-a299-bd7e98aff7fa
              chefId: 9a0ce94b-d275-4ea6-ae11-914612c79d62
              name: グラタン
              servings: 6
              imageUrl: IMAGE_URL_1
              introduction: INTRODUCTION_1
              createdAt: '2023-08-13T12:44:19.090518+09:00'
              updatedAt: '2023-08-16T18:56:28.756937+09:00'
              numFav: 0
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: レシピID
              chefId:
                type: string
                description: シェフID
              name:
                type: string
                description: レシピ名
              servings:
                type: integer
                description: ＊人前
              imageUrl:
                type: string
                description: 画像
              introduction:
                type: string
                description: レシピの紹介文
              createdAt:
                type: string
              updatedAt:
                type: string
              numFav:
                type: integer
                description: ファボられ数
            required:
              - id
              - chefId
              - name
              - servings
              - createdAt
              - updatedAt
              - numFav
      required:
        - data
    ListFollowUser:
      type: object
      x-examples:
        Example 1:
          data:
            - id: 8642eb31-7801-4284-b69b-225aee3b1826
              name: NAME_1
              imageUrl: imageUrl
              profile: PROFILE_1
              createdAt: '2023-08-16T19:48:45.97564+09:00'
              updatedAt: '2023-08-16T19:48:45.97564+09:00'
              numRecipe: 0
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: ユーザーID（一般シェフID）
              name:
                type: string
                description: ニックネーム
              imageUrl:
                type: string
                description: プロフィール画像
              profile:
                type: string
                description: 自己紹介
              createdAt:
                type: string
              updatedAt:
                type: string
              numRecipe:
                type: integer
                description: レシピ数
            required:
              - id
              - name
              - createdAt
              - updatedAt
              - numRecipe
      required:
        - data
    ListRecipe:
      type: object
      x-examples:
        Example 1:
          data:
            - id: c8235d40-6daf-424e-a299-bd7e98aff7fa
              chefId: 9a0ce94b-d275-4ea6-ae11-914612c79d62
              name: グラタン
              servings: 6
              imageUrl: IMAGE_URL_1
              introduction: INTRODUCTION_1
              createdAt: '2023-08-15T12:44:19.09+09:00'
              updatedAt: '2023-08-16T21:12:05.059812+09:00'
              numFav: 0
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              chefId:
                type: string
                format: uuid
              name:
                type: string
                description: レシピ名
              servings:
                type: integer
                description: ＊人前
              imageUrl:
                type: string
                description: 画像
              introduction:
                type: string
                description: レシピの紹介文
              createdAt:
                type: string
              updatedAt:
                type: string
              numFav:
                type: integer
                description: ファボられ数
            required:
              - id
              - chefId
              - name
              - servings
              - createdAt
              - updatedAt
              - numFav
      required:
        - data
    SearchChef:
      type: object
      x-examples:
        Example 1:
          data:
            - id: 9a0ce94b-d275-4ea6-ae11-914612c79d62
              name: Mシェフ
              imageUrl: 'http://www.yahoo.co.jp'
              profile: 平成14年事例Ⅱで出題されたMシェフ。三國清三がモデルではないか？と噂になった。
              createdAt: '2023-08-13T12:25:46.050604+09:00'
              updatedAt: '2023-08-13T12:44:19.090518+09:00'
              numRecipe: 1
              numFollower: 0
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
                description: 登録名
              imageUrl:
                type: string
                description: プロフィール画像
              profile:
                type: string
                description: シェフ紹介
              createdAt:
                type: string
              updatedAt:
                type: string
              numRecipe:
                type: integer
                description: レシピ数
              numFollower:
                type: integer
                description: フォロワー数
            required:
              - id
              - name
              - createdAt
              - updatedAt
              - numRecipe
              - numFollower
    SearchChefRecipe:
      type: object
      x-examples:
        Example 1:
          data:
            - id: c8235d40-6daf-424e-a299-bd7e98aff7fa
              chefId: 9a0ce94b-d275-4ea6-ae11-914612c79d62
              name: グラタン
              servings: 6
              imageUrl: IMAGE_URL_1
              introduction: INTRODUCTION_1
              accessLevel: 2
              createdAt: '2023-08-13T12:44:19.090518+09:00'
              updatedAt: '2023-08-13T12:50:13.649757+09:00'
              numFav: 0
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              chefId:
                type: string
              name:
                type: string
                description: レシピ名
              servings:
                type: integer
                description: ＊人前
              imageUrl:
                type: string
                description: 画像
              introduction:
                type: string
                description: レシピの紹介文
              accessLevel:
                type: integer
                description: 公開、限定公開、非公開、下書き
              createdAt:
                type: string
              updatedAt:
                type: string
              numFav:
                type: integer
                description: いいね数
            required:
              - id
              - chefId
              - name
              - servings
              - accessLevel
              - createdAt
              - updatedAt
              - numFav
    TrendRecipe:
      type: object
      x-stoplight:
        id: h8hgl2ffqlwu5
      x-examples:
        Example 1:
          data:
            - recipeId: 163f18f2-a7ca-44d2-830a-fa317d0954ec
              name: ユウタ
              introduction: 群馬県久遠郡せたな町蛸井興屋。新潟県能美市春野町内ノ谷。京都府南河内郡河南町飯島道東。富山県利根郡昭和村円山町。静岡県野洲市飯島道東。
              imageUrl: 'https://source.unsplash.com/random/300x300?v=1'
              numFav: 570
              score: 44
            - recipeId: f1359d70-1b2e-4e9c-8130-40c0e2bf0979
              name: ナギサ
              introduction: 鳥取県坂東市長瀬。秋田県伊達郡桑折町岩崎。広島県湯沢市豊郷。大阪府児玉郡神川町白木。広島県和歌山市壬生甲。
              imageUrl: 'https://source.unsplash.com/random/300x300?v=1'
              numFav: 4
              score: 57
            - recipeId: b169a04e-85a5-4e93-bf5e-78b8854956db
              name: ユキミ
              introduction: 山梨県海部郡海陽町稲木町。青森県京丹後市北町。鹿児島県児湯郡川南町螺湾。兵庫県西牟婁郡上富田町千代川町今津。長崎県渋谷区辰巳町。
              imageUrl: 'https://source.unsplash.com/random/300x300?v=1'
              numFav: 955
              score: 96
            - recipeId: 621e5e3c-65bb-43bf-b7a8-da7855bcdf1f
              name: ハルキ
              introduction: 静岡県越谷市松山。岩手県大島郡宇検村愛の杜。広島県高砂市厳木町牧瀬。高知県紋別郡遠軽町中町。宮崎県中新川郡立山町白根日の出町。
              imageUrl: 'https://source.unsplash.com/random/300x300?v=1'
              numFav: 990
              score: 79
            - recipeId: 43aafae7-a3d5-4947-8b2b-188a913c1892
              name: マキ
              introduction: 秋田県浜松市東区御坊山。東京都下伊那郡喬木村麻生。福井県札幌市手稲区西方町金井。岩手県新城市婦中町麦島。高知県対馬市吉田町川手。
              imageUrl: 'https://source.unsplash.com/random/300x300?v=1'
              numFav: 569
              score: 54
            - recipeId: fd2b8bb2-2a46-4faa-a139-f004d373f572
              name: ユキナ
              introduction: 宮城県金沢市西鴻池町。熊本県東白川郡鮫川村木落。三重県枝幸郡浜頓別町大原。広島県伊都郡かつらぎ町宮川町小谷。三重県瀬戸内市木葉下町。
              imageUrl: 'https://source.unsplash.com/random/300x300?v=1'
              numFav: 578
              score: 89
            - recipeId: 763d4fcf-4784-4f8f-8f42-181c423767c8
              name: シンイチ
              introduction: 高知県文京区御田。京都府三島郡島本町森戸。徳島県虻田郡洞爺湖町園原。東京都魚津市桂町。鳥取県鎌ケ谷市天王下。
              imageUrl: 'https://source.unsplash.com/random/300x300?v=1'
              numFav: 45
              score: 6
            - recipeId: 51190a00-03cb-433f-8a82-3e5bbf53be6f
              name: トモエ
              introduction: 奈良県練馬区園原。山口県備前市滝本。滋賀県帯広市南中山。山口県神戸市垂水区大野町代三五。愛知県邑楽郡明和町南高鍋。
              imageUrl: 'https://source.unsplash.com/random/300x300?v=1'
              numFav: 75
              score: 69
            - recipeId: e437d6e5-911d-48e3-81fa-d78a407b63f9
              name: キナ
              introduction: 長崎県利根郡川場村宮浦。愛知県木曽郡大桑村波多津町津留主屋。山形県南松浦郡新上五島町宮川町小谷。滋賀県吉野郡十津川村下白岩町。鳥取県浜松市天竜区高津。
              imageUrl: 'https://source.unsplash.com/random/300x300?v=1'
              numFav: 546
              score: 3
            - recipeId: 73903e01-856a-4a6d-857a-87feb0bbc9f4
              name: アキカ
              introduction: 長野県飯塚市平田。滋賀県秩父郡小鹿野町御供町。鹿児島県海津市光地園。山梨県大阪市住吉区佐田町八幡原。三重県長岡市磯部。
              imageUrl: 'https://source.unsplash.com/random/300x300?v=1'
              numFav: 40
              score: 46
      x-tags:
        - recipe
      title: trendRecipe
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              recipeId:
                type: string
                description: レシピID
                format: uuid
              name:
                type: string
                description: レシピ名
              introduction:
                type: string
                description: レシピの紹介文
              imageUrl:
                type: string
                description: レシピ画像
              numFav:
                type: integer
                description: ファボられ数
              score:
                type: integer
                description: 話題度→実際のデータはscoreの降順でソートされる
            required:
              - recipeId
              - name
              - numFav
              - score
      required:
        - data
    UpdateChef:
      type: object
      x-examples:
        Example 1:
          id: d309c90c-e318-410e-b342-bed6bc2dc96f
          name: Mシェフ
          imageUrl: 'http://www.yahoo.co.jp'
          profile: 平成14年事例Ⅱで出題されたMシェフ。三國清三がモデルではないか？と噂になった。
          link:
            - label: LABEL_1
              url: URL_1
            - label: LABEL_2
              url: URL_2
          createdAt: '2023-08-09T05:46:08.569996+09:00'
          updatedAt: '2023-08-09T05:46:46.296479+09:00'
          numRecipe: 0
          numFollower: 0
      properties:
        id:
          type: string
        name:
          type: string
          description: 登録名
        imageUrl:
          type: string
          description: プロフィール画像
        profile:
          type: string
          description: シェフ紹介
        link:
          type: array
          description: リンク
          items:
            type: object
            properties:
              label:
                type: string
              url:
                type: string
        createdAt:
          type: string
        updatedAt:
          type: string
        numRecipe:
          type: integer
          description: レシピ数
        numFollower:
          type: integer
          description: フォロワー数
      required:
        - id
        - name
        - link
        - createdAt
        - updatedAt
        - numRecipe
        - numFollower
    UpdateRecipe:
      type: object
      x-examples:
        Example 1:
          id: fcd040c9-8ea9-4833-a42d-95e57c47a745
          chefId: f4da8c3d-64d7-4dcf-858d-f3161304531b
          usrId: null
          name: 名前を変えてみる
          servings: 4
          ingredient:
            - id: 157e8f3d-033f-47b4-b74c-332d2caf2437
              name: 修正1
              supplement: 修正補足1
            - id: 8b830fd4-d3f8-48ea-8956-dd4f28e40984
              name: 追加2
              supplement: 追加補足2
          method:
            - html: <p>作り方1</p>
              supplement: {}
            - html: <p>作り方2</p>
              supplement: []
          imageUrl: IMAGE_URL_1
          introduction: INTRODUCTION_1
          link:
            - 'https://www.yahoo.co.jp'
            - 'https://www.amazon.co.jp'
          accessLevel: 2
          createdAt: '2023-08-06T06:14:53.749359+09:00'
          updatedAt: '2023-08-06T17:22:06.900841+09:00'
          numFav: 0
      title: updateRecipe
      properties:
        id:
          type: string
          format: uuid
          description: レシピID
        chefId:
          type: string
          format: uuid
          description: シェフID
        usrId:
          type: string
          format: uuid
          description: ユーザーID
        name:
          type: string
          description: レシピ名
        servings:
          type: integer
          description: ＊人前
        ingredient:
          type: array
          description: 材料
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              name:
                type: string
                description: 材料名
              supplement:
                type: string
                description: 補足
            required:
              - id
              - name
        method:
          type: array
          description: 作り方
          items:
            type: object
            properties:
              html:
                type: string
              supplement:
                oneOf:
                  - type: object
                  - type: array
                    items:
                      type: object
        imageUrl:
          type: string
          description: 画像
        introduction:
          type: string
          description: レシピの紹介文
        link:
          type: array
          description: リンク
          items:
            type: string
        accessLevel:
          type: integer
          description: 公開、限定公開、非公開、下書き
        createdAt:
          type: string
        updatedAt:
          type: string
        numFav:
          type: integer
          description: いいね数
      required:
        - id
        - name
        - servings
        - ingredient
        - method
        - accessLevel
        - createdAt
        - updatedAt
        - numFav
    UpdateShoppingList:
      type: object
      x-examples:
        Example 1:
          id: bff38254-4632-4c83-b4e0-09ac3de89c2a
          usrId: 37823a93-2569-4f6b-832f-5dfe47f39200
          recipeId: 41eb8f23-7b27-4094-b2fc-b3e576e36b54
          rIdx: 2
          description: 4人前
          isFairCopy: false
          createdAt: '2023-08-12T15:35:25.866045+09:00'
          updatedAt: '2023-08-12T15:36:42.235739+09:00'
          item:
            - id: 98edbf48-112a-437b-8c3c-37a7c10a5162
              ingredientId: d511d238-bbb9-4eb0-ba0e-811e3ec7b591
              name: 卵
              supplement: 鶏卵
            - id: 944fce73-06d5-4087-a1c5-40fd82a9e62b
              ingredientId: d0a35ca6-6478-4339-aa8f-76a6628ee796
              name: トマト
              supplement: ケチャップ
            - id: a0181a86-c9dc-48ca-8127-71c64ff5d186
              ingredientId: f986c6b0-6b03-427a-aa6a-890f0bb4a97b
              name: グラタン
              supplement: チーズ
      properties:
        id:
          type: string
          format: uuid
          description: 買い物リストID
        usrId:
          type: string
          format: uuid
          description: ユーザーID
        recipeId:
          type: string
          format: uuid
          description: レシピID
        rIdx:
          type: integer
          description: リバースインデックス
        description:
          type: string
          description: 「*人前」「メモリスト」
        isFairCopy:
          type: boolean
          description: true：清書、false：下書き
        createdAt:
          type: string
        updatedAt:
          type: string
        item:
          type: array
          description: 買い物明細
          items:
            type: object
            properties:
              id:
                type: string
                description: 買い物明細ID
                format: uuid
              ingredientId:
                type: string
                description: 材料ID
                format: uuid
              name:
                type: string
                description: 材料名
              supplement:
                type: string
                description: 補足
            required:
              - id
              - name
      required:
        - id
        - usrId
        - rIdx
        - isFairCopy
        - createdAt
        - updatedAt
        - item
    UpdateUsr:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
          description: ログインemail
        name:
          type: string
          description: ニックネーム
        imageUrl:
          type: string
          description: プロフィール画像（任意）
        profile:
          type: string
          description: 自己紹介（任意）
        link:
          type: array
          description: リンク（任意）
          items:
            type: object
            properties:
              label:
                type: string
              url:
                type: string
        createdAt:
          type: string
        updatedAt:
          type: string
        numRecipe:
          type: integer
          description: マイレシピ数
      required:
        - id
        - email
        - name
        - link
        - createdAt
        - updatedAt
        - numRecipe
      x-examples:
        Example 1:
          id: 1c6fc87e-430b-4e71-af55-103fe3a16bee
          email: kaneda@gmail.com
          name: NAME_1
          imageUrl: 'http://www.yahoo.co.jp'
          profile: PROFILE_1
          link:
            - label: LABEL_1
              url: 'http://www.yahoo.co.jp'
            - label: LABEL_2
              url: 'http://www.yahoo.co.jp'
          createdAt: '2023-08-08T18:48:40.89562+09:00'
          updatedAt: '2023-08-08T19:56:55.402664+09:00'
          numRecipe: 0
